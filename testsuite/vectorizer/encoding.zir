-- 
-- Copyright (c) Microsoft Corporation
-- All rights reserved. 
--
-- Licensed under the Apache License, Version 2.0 (the ""License""); you
-- may not use this file except in compliance with the License. You may
-- obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
-- LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR
-- A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
--
-- See the Apache Version 2.0 License for specific language governing
-- permissions and limitations under the License.
--
--
#include "const.zir"

let comp encode34() =    
 repeat [6,8] seq{
   dvm1 <- take;
   dvm2 <- take;
   dvm3 <- take;

   emits({'0, '0});
   emit (dvm1);
   emit (dvm2)
 }
in


let comp encode23() =
-- This is too big for LUTter as we take twice
-- and it gets inlined, so this becomes [16,24]
-- repeat [8,12] seq{
 repeat [4,6] seq{
   dvm1 <- take;
   dvm2 <- take;

   emits ({'0, '0});
   emit dvm2
 }
in

let comp encode12() =
 repeat [8,16] seq {
   dvm1 <- take;
   emits {'1, '1}
 }
in



let comp encode(coding: int) =
 if coding == CR_34 then
   encode34()
 else 
   if coding == CR_23 then
      encode23()
   else 
     if coding == CR_12 then
      encode12()
     else
       repeat do{error "Unknown coding rate!"}
in

