-- BOZIDAR: Quick port of Mahanth's initial code - to be tested again

fun update_crc(x:bit, var crc_state:arr[4] bit) {
  let base = {'1, '0, '1, '1} 
  if crc_state[0] == '1 then {
    for i in [0,length(crc_state)] {
      crc_state[i] := crc_state[i]^base[i];
    }
  };
  crc_state[0,3] := crc_state[1,3];
  crc_state[3] := x
}

fun comp crc () {
    var crc_state: arr[4] bit;
    repeat seq { x <- take
               ; do { update_crc(x, crc_state) }
               ; emits crc_state 
               }
}

let comp main = read [bit] >>> crc() >>> write[bit]
