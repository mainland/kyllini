fun perm(data:arr bit, index:arr int) { 
  var out:arr[length(data)] bit;

  for i in [0, length(index)] {
    out[i] := data[index[i]]
  }
  return out
}


fun comp test () { 
  var a : arr[4] int;
  var ind : arr[4] int := {3, 2, 4, 1};

  x <- takes 4;
  emits perm(x, ind)

}

let comp main = read [bit] >>> test() >>> write[bit]

